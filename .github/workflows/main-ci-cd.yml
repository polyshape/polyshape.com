name: Main Branch CICD

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      HEADLESS: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Typecheck
        run: npm run typecheck

      - name: Lint
        run: npm run lint

      - name: Run unit tests and generate HTML report
        run: npm run test:unit

      - name: Upload HTML test report
        uses: actions/upload-artifact@v4
        with:
          name: jest-html-report
          path: unit-test-report.html

      - name: Build
        run: npm run build

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Vercel deployment
        id: vercel_deploy
        run: |
          response=$(curl -s -X POST "https://api.vercel.com/v13/deployments?teamId=${{ secrets.VERCEL_TEAM_ID }}" \
            -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"name":"polyshape.com","gitSource":{"type":"github","repoId":"1048603374","ref":"main"},"target":"production","build":{"env":{"CI_DEPLOY":"true"}}}')

          echo "id=$(echo $response | jq -r .id)" >> $GITHUB_OUTPUT
      - name: Wait for deployment to complete
        run: |
          DEPLOY_ID="${{ steps.vercel_deploy.outputs.id }}"
          echo "Waiting for deployment $DEPLOY_ID"

          for i in {1..30}; do
            status=$(curl -s -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
              "https://api.vercel.com/v13/deployments/$DEPLOY_ID?teamId=${{ secrets.VERCEL_TEAM_ID }}" | jq -r .readyState)

            echo "Status: $status"

            if [ "$status" = "READY" ]; then
              echo "Deployment successful"
              exit 0
            elif [ "$status" = "ERROR" ] || [ "$status" = "CANCELED" ]; then
              echo "Deployment failed"
              exit 1
            fi

            sleep 10
          done

          echo "Timed out waiting for deployment"
          exit 1